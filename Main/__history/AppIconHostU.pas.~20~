unit AppIconHostU;

interface

uses
  Winapi.Windows, Winapi.Messages, System.Classes, Vcl.Forms, Vcl.Controls, Vcl.Graphics;

type
  TFormAppIconHost = class(TForm)
  private
  protected
    procedure CreateParams(var Params: TCreateParams); override;
  public
    constructor Create(AOwner: TComponent); override;
//    procedure WMSysCommand(var Msg: TWMSysCommand); message WM_SYSCOMMAND;
//    procedure WMActivateApp(var Msg: TWMActivateApp); message WM_ACTIVATEAPP;
    procedure WMActivate(var Msg: TWMActivate); message WM_ACTIVATE;
  end;

var
  FormAppIconHost: TFormAppIconHost;

implementation

uses
  ShwFilesU, WakeHiddenU, System.IOUtils, System.IniFiles;

{$R *.dfm}

constructor TFormAppIconHost.Create(AOwner: TComponent);
begin
  inherited CreateNew(AOwner);

  BorderStyle := bsNone;
  BorderIcons := [];
  Width := 1;
  Height := 1;

  // Fenster außerhalb des Bildschirms platzieren
  Left := Screen.DesktopWidth + 100;
  Top := Screen.DesktopHeight + 100;

  Visible := True; // notwendig, damit es Nachrichten empfängt
end;

procedure TFormAppIconHost.CreateParams(var Params: TCreateParams);
begin
  inherited CreateParams(Params);
  Params.WndParent := GetDesktopWindow;
  Params.ExStyle := Params.ExStyle or WS_EX_APPWINDOW;
end;

//procedure TFormAppIconHost.WMSysCommand(var Msg: TWMSysCommand);
//begin
//  if (Msg.CmdType = SC_RESTORE) and Assigned(ShwFiles) then
//  begin
//    Log('🖱 Taskleisten-Icon geklickt → ShwFiles anzeigen');
//    ShwFiles.Show;
//    ShwFiles.WindowState := wsNormal;
//    ShwFiles.BringToFront;
//    ShwFiles.SetFocus;
//  end;
//
//  inherited;
//end;

//procedure TFormAppIconHost.WMActivateApp(var Msg: TWMActivateApp);
//begin
//  inherited;
//  if Msg.Active and Assigned(ShwFiles) and not ShwFiles.Visible then
//  begin
//    Log('🖱 App-Icon wurde aktiviert → ShwFiles anzeigen');
//    ShwFiles.Show;
//    ShwFiles.BringToFront;
//    ShwFiles.SetFocus;
//  end;
//end;

procedure TFormAppIconHost.WMActivate(var Msg: TWMActivate);
begin
  inherited;

  if (Msg.Active = WA_ACTIVE) or (Msg.Active = WA_CLICKACTIVE) then
  begin
    if Assigned(ShwFiles) and not ShwFiles.Visible then
    begin
      Log('🖱 App-Icon aktiviert → ShwFiles anzeigen');
      ShwFiles.Show;
      ShwFiles.BringToFront;
      ShwFiles.SetFocus;
    end;
  end;
end;

end.
